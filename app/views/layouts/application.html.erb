<!DOCTYPE html>
<%# アプリケーション全体のレイアウトを定義するテンプレート %>
<html lang="ja">
  <head>
    <%# タイトルタグ - content_forで個別ページのタイトルを設定可能、未設定時はデフォルトで"EduFinTech" %>
    <title><%= content_for(:title) || "EduFinTech" %></title>

    <%# モバイル対応のためのメタタグ設定 %>
    <%# レスポンシブデザイン対応のビューポート設定 %>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no">
    <%# iOSでフルスクリーン表示を可能にする設定 %>
    <meta name="apple-mobile-web-app-capable" content="yes">
    <%# Androidでフルスクリーン表示を可能にする設定 %>
    <meta name="mobile-web-app-capable" content="yes">
    <%# オーバースクロールの動作を制御 %>
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    
    <!-- バウンスエフェクト防止と適切なレイアウト構造のためのスクリプト -->
    <script>
      (function() {
        // ビューポートの高さを正確に設定する関数
        function setViewportHeight() {
          // 実際の画面の高さをビューポートに設定
          const vh = window.innerHeight * 0.01;
          document.documentElement.style.setProperty('--vh', `${vh}px`);
        }

        // 画面の高さが変わる可能性があるイベントに対応
        window.addEventListener('resize', setViewportHeight);
        window.addEventListener('orientationchange', setViewportHeight);
        window.addEventListener('load', setViewportHeight);
        
        // 初期設定
        setViewportHeight();
        
        // DOMコンテンツ読み込み完了時に実行
        document.addEventListener('DOMContentLoaded', function() {
          // フッターの高さを計算してメインエリアの下部マージンに設定する関数
          function adjustMainContentPadding() {
            const footer = document.querySelector('.footer');
            const main = document.querySelector('main');
            
            if (footer && main) {
              // フッターの高さを計算
              const footerHeight = footer.offsetHeight;
              // メインコンテンツの下部パディングを設定（フッターとの重なりを避けるため）
              main.style.paddingBottom = `${footerHeight + 16}px`;
            }
          }
          
          // レイアウト調整を実行
          adjustMainContentPadding();
          
          // ウィンドウサイズが変更されたときに再調整
          window.addEventListener('resize', adjustMainContentPadding);
          
          // メインのスクロール制御（メイン以外のスクロールを禁止）
          const mainElement = document.getElementById('main-scroll-container');
          
          // ホイール、タッチ、キーイベントの処理
          document.addEventListener('wheel', function(e) {
            if (!e.target.closest('#main-scroll-container')) {
              e.preventDefault();
            }
          }, { passive: false });
          
          document.addEventListener('touchmove', function(e) {
            if (!e.target.closest('#main-scroll-container')) {
              e.preventDefault();
            }
          }, { passive: false });
          
          document.addEventListener('keydown', function(e) {
            // スクロールに関連するキー
            const scrollKeys = [32, 33, 34, 35, 36, 37, 38, 39, 40];
            if (scrollKeys.includes(e.keyCode) && !e.target.closest('#main-scroll-container')) {
              e.preventDefault();
            }
          });
        });
      })();
    </script>
    
    <!-- レイアウト用の基本スタイル -->
    <style>
      /* CSS変数でビューポート高さを管理 */
      :root {
        --vh: 1vh;
      }
      
      /* ベーシックなリセット */
      html, body {
        height: 100%;
        width: 100%;
        margin: 0;
        padding: 0;
        overflow: hidden;
      }
      
      /* レイアウト構造 */
      .page-wrapper {
        display: flex;
        flex-direction: column;
        min-height: 100vh; /* フォールバック */
        min-height: calc(var(--vh, 1vh) * 100); /* より正確な高さ */
        width: 100%;
        position: relative;
        overflow: hidden;
      }
      
      /* メインスクロールエリア */
      main {
        flex: 1 1 auto;
        width: 100%;
        overflow-y: auto;
        overflow-x: hidden;
        -webkit-overflow-scrolling: touch;
        position: relative;
        z-index: 1;
      }
      
      /* フッター配置 */
      .footer {
        flex-shrink: 0;
        width: 100%;
        position: relative;
        z-index: 2;
      }
      
      /* スクロールバー最適化 */
      * {
        scrollbar-width: thin;
      }
      
      main::-webkit-scrollbar {
        width: 6px;
      }
      
      main::-webkit-scrollbar-track {
        background: transparent;
      }
      
      main::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 3px;
      }
    </style>

    <%# セキュリティ関連のメタタグ %>
    <%# CSRF対策のためのメタタグ - クロスサイトリクエストフォージェリを防止 %>
    <%= csrf_meta_tags %>
    <%# CSP(Content Security Policy)のためのメタタグ - XSSなどの攻撃を防止 %>
    <%= csp_meta_tag %>

    <%# 個別ページで追加のhead要素を挿入可能なyieldポイント %>
    <%= yield :head %>

    <%# PWA(Progressive Web App)のマニフェストファイル設定 - 現在は未使用 %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <%# アプリケーションのアイコン設定 %>
    <%# 通常のファビコン、SVGファビコン、iOS用アイコンを設定 %>
    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# アセットの読み込み %>
    <%# Turboでの追跡を有効化したスタイルシートの読み込み %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%# JavaScriptのimportmapを使用したモジュールの読み込み %>
    <%= javascript_importmap_tags %>
  </head>

  <body>
    <div class="page-wrapper">
      <%# ヘッダーパーシャル %>
      <%= render "shared/header" %>

      <%# フラッシュメッセージパーシャル %>
      <%= render "shared/flash_messages" %>

      <%# メインコンテンツ %>
      <main id="main-scroll-container">
        <%= yield %>
      </main>

      <%# フッターパーシャル %>
      <%= render "shared/footer" %>
    </div>
  </body>
</html>
